generator client {
  provider = "prisma-client-js"
}

 datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  name             String    @unique
  description      String
  benefits         String[]
  directions       String[]
  price            Float
  mainImage        String
  additionalImages String[]  @default([])
  categoryId       String    @db.ObjectId
  category         Category  @relation(fields: [categoryId], references: [id])
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String
  image       String
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  role      String
  content   String
  rating    Int
  avatar    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ContactMessage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  phone     String
  message   String
  createdAt DateTime @default(now())
}

model Order {
  id               String      @id @default(auto()) @map("_id") @db.ObjectId
  customerName     String
  customerEmail    String
  customerPhone    String
  customerAddress  String
  customerPinCode  String    
  promoCode        String?    
  items            OrderItem[]
  totalAmount      Float
  status           String      @default("PENDING")
  createdAt        DateTime    @default(now())
}

model OrderItem {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId       String  @db.ObjectId
  order         Order   @relation(fields: [orderId], references: [id])
  productId     String  @db.ObjectId
  productName   String
  productPrice  Float
  productImage  String
  quantity      Int
}

model User {
  id        String   @id @map("_id") @db.ObjectId
  firebaseId String? @unique
  email     String?  @unique
  firstName String
  lastName  String
  phone     String?  @unique
  role      String   @default("customer")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

type Address {
  street  String
  city    String
  state   String
  zipCode String
  country String
}